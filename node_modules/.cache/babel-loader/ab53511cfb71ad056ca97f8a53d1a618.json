{"ast":null,"code":"var _jsxFileName = \"/home/japneetsingh/Documents/React_Tutorilals/Assignment/calculator/src/buttons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  _s();\n\n  let {\n    number,\n    query,\n    setQuery,\n    intermediate_result,\n    setIntermediateResult,\n    result,\n    setResult\n  } = _ref;\n  const [operator, setOperator] = useState();\n\n  let store_in_history = () => {};\n\n  let updateText = ev => {\n    if ([\"/\", \"X\", \"-\", \"+\"].includes(ev.target.value)) {\n      setIntermediateResult(query);\n      setOperator(ev.target.value);\n    }\n\n    if (ev.target.value == \"=\") {\n      store_in_history();\n    } else {\n      if (query == 0) {\n        setQuery(() => ev.target.value);\n      } else {\n        setQuery(prev_value => String(prev_value) + ev.target.value);\n\n        if (intermediate_result) {\n          if (ev.target.value == \"+\") {\n            setResult(intermediate_result + ev.target.value);\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: number,\n      onClick: ev => updateText(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Button, \"QU5Lot6FCjYZoVLRIJNbYbEuI7k=\");\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/japneetsingh/Documents/React_Tutorilals/Assignment/calculator/src/buttons.js"],"names":["React","useState","Button","number","query","setQuery","intermediate_result","setIntermediateResult","result","setResult","operator","setOperator","store_in_history","updateText","ev","includes","target","value","prev_value","String"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,MAAT,OAQZ;AAAA;;AAAA,MAR4B;AAC7BC,IAAAA,MAD6B;AAE7BC,IAAAA,KAF6B;AAG7BC,IAAAA,QAH6B;AAI7BC,IAAAA,mBAJ6B;AAK7BC,IAAAA,qBAL6B;AAM7BC,IAAAA,MAN6B;AAO7BC,IAAAA;AAP6B,GAQ5B;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;;AAEA,MAAIW,gBAAgB,GAAG,MAAM,CAAE,CAA/B;;AAEA,MAAIC,UAAU,GAAIC,EAAD,IAAQ;AACvB,QAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBC,QAArB,CAA8BD,EAAE,CAACE,MAAH,CAAUC,KAAxC,CAAJ,EAAoD;AAClDV,MAAAA,qBAAqB,CAACH,KAAD,CAArB;AACAO,MAAAA,WAAW,CAACG,EAAE,CAACE,MAAH,CAAUC,KAAX,CAAX;AACD;;AAED,QAAIH,EAAE,CAACE,MAAH,CAAUC,KAAV,IAAmB,GAAvB,EAA4B;AAC1BL,MAAAA,gBAAgB;AACjB,KAFD,MAEO;AACL,UAAIR,KAAK,IAAI,CAAb,EAAgB;AACdC,QAAAA,QAAQ,CAAC,MAAMS,EAAE,CAACE,MAAH,CAAUC,KAAjB,CAAR;AACD,OAFD,MAEO;AACLZ,QAAAA,QAAQ,CAAEa,UAAD,IAAgBC,MAAM,CAACD,UAAD,CAAN,GAAqBJ,EAAE,CAACE,MAAH,CAAUC,KAAhD,CAAR;;AACA,YAAIX,mBAAJ,EAAyB;AACvB,cAAIQ,EAAE,CAACE,MAAH,CAAUC,KAAV,IAAmB,GAAvB,EAA4B;AAC1BR,YAAAA,SAAS,CAACH,mBAAmB,GAAGQ,EAAE,CAACE,MAAH,CAAUC,KAAjC,CAAT;AACD;AACF;AACF;AACF;AACF,GApBD;;AAsBA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAEd,MAFT;AAGE,MAAA,OAAO,EAAGW,EAAD,IAAQD,UAAU,CAACC,EAAD;AAH7B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GA5CuBZ,M;;KAAAA,M","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Button({\n  number,\n  query,\n  setQuery,\n  intermediate_result,\n  setIntermediateResult,\n  result,\n  setResult,\n}) {\n  const [operator, setOperator] = useState();\n\n  let store_in_history = () => {};\n\n  let updateText = (ev) => {\n    if ([\"/\", \"X\", \"-\", \"+\"].includes(ev.target.value)) {\n      setIntermediateResult(query);\n      setOperator(ev.target.value);\n    }\n\n    if (ev.target.value == \"=\") {\n      store_in_history();\n    } else {\n      if (query == 0) {\n        setQuery(() => ev.target.value);\n      } else {\n        setQuery((prev_value) => String(prev_value) + ev.target.value);\n        if (intermediate_result) {\n          if (ev.target.value == \"+\") {\n            setResult(intermediate_result + ev.target.value);\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"button\"\n        value={number}\n        onClick={(ev) => updateText(ev)}\n      ></input>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}