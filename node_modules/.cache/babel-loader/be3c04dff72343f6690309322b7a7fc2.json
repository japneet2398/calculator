{"ast":null,"code":"var _jsxFileName = \"/home/japneetsingh/Documents/React_Tutorilals/Assignment/calculator/src/buttons.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    number,\n    query,\n    setQuery,\n    intermediate_result,\n    setIntermediateResult,\n    result,\n    setResult,\n    operator,\n    setOperator\n  } = _ref;\n\n  let store_in_history = () => {};\n\n  let updateText = ev => {\n    if (ev.target.value == \"=\") {\n      store_in_history();\n    }\n\n    if (query == 0) {\n      setQuery(() => ev.target.value);\n    } else {\n      setQuery(prev_value => String(prev_value) + ev.target.value);\n\n      if ([\"/\", \"X\", \"-\", \"+\"].includes(ev.target.value)) {\n        setIntermediateResult(query);\n        setOperator(ev.target.value);\n      } else {// if (intermediate_result) {\n        //   if (operator == \"+\") {\n        //     setResult(\n        //       Number(intermediate_result) +\n        //         Number(query.slice(query.indexOf(operator) + 1))\n        //     );\n        //   }\n        // }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: number,\n      onClick: ev => updateText(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/japneetsingh/Documents/React_Tutorilals/Assignment/calculator/src/buttons.js"],"names":["React","useState","Button","number","query","setQuery","intermediate_result","setIntermediateResult","result","setResult","operator","setOperator","store_in_history","updateText","ev","target","value","prev_value","String","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,MAAT,OAUZ;AAAA,MAV4B;AAC7BC,IAAAA,MAD6B;AAE7BC,IAAAA,KAF6B;AAG7BC,IAAAA,QAH6B;AAI7BC,IAAAA,mBAJ6B;AAK7BC,IAAAA,qBAL6B;AAM7BC,IAAAA,MAN6B;AAO7BC,IAAAA,SAP6B;AAQ7BC,IAAAA,QAR6B;AAS7BC,IAAAA;AAT6B,GAU5B;;AACD,MAAIC,gBAAgB,GAAG,MAAM,CAAE,CAA/B;;AAEA,MAAIC,UAAU,GAAIC,EAAD,IAAQ;AACvB,QAAIA,EAAE,CAACC,MAAH,CAAUC,KAAV,IAAmB,GAAvB,EAA4B;AAC1BJ,MAAAA,gBAAgB;AACjB;;AAED,QAAIR,KAAK,IAAI,CAAb,EAAgB;AACdC,MAAAA,QAAQ,CAAC,MAAMS,EAAE,CAACC,MAAH,CAAUC,KAAjB,CAAR;AACD,KAFD,MAEO;AACLX,MAAAA,QAAQ,CAAEY,UAAD,IAAgBC,MAAM,CAACD,UAAD,CAAN,GAAqBH,EAAE,CAACC,MAAH,CAAUC,KAAhD,CAAR;;AACA,UAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBG,QAArB,CAA8BL,EAAE,CAACC,MAAH,CAAUC,KAAxC,CAAJ,EAAoD;AAClDT,QAAAA,qBAAqB,CAACH,KAAD,CAArB;AACAO,QAAAA,WAAW,CAACG,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAX;AACD,OAHD,MAGO,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF;AACF,GAvBD;;AAyBA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAEb,MAFT;AAGE,MAAA,OAAO,EAAGW,EAAD,IAAQD,UAAU,CAACC,EAAD;AAH7B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;KA/CuBZ,M","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Button({\n  number,\n  query,\n  setQuery,\n  intermediate_result,\n  setIntermediateResult,\n  result,\n  setResult,\n  operator,\n  setOperator,\n}) {\n  let store_in_history = () => {};\n\n  let updateText = (ev) => {\n    if (ev.target.value == \"=\") {\n      store_in_history();\n    }\n\n    if (query == 0) {\n      setQuery(() => ev.target.value);\n    } else {\n      setQuery((prev_value) => String(prev_value) + ev.target.value);\n      if ([\"/\", \"X\", \"-\", \"+\"].includes(ev.target.value)) {\n        setIntermediateResult(query);\n        setOperator(ev.target.value);\n      } else {\n        // if (intermediate_result) {\n        //   if (operator == \"+\") {\n        //     setResult(\n        //       Number(intermediate_result) +\n        //         Number(query.slice(query.indexOf(operator) + 1))\n        //     );\n        //   }\n        // }\n      }\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"button\"\n        value={number}\n        onClick={(ev) => updateText(ev)}\n      ></input>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}