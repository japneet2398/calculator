{"ast":null,"code":"var _jsxFileName = \"/home/japneetsingh/Documents/React_Tutorilals/Assignment/calculator/src/buttons.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    number,\n    value,\n    setValue\n  } = _ref;\n\n  let updateText = ev => {\n    if (value == 0) {\n      setValue(() => ev.target.value);\n    } else {\n      setValue(prev_value => String(prev_value) + ev.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: number,\n      onClick: ev => updateText(ev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/japneetsingh/Documents/React_Tutorilals/Assignment/calculator/src/buttons.js"],"names":["React","useState","Button","number","value","setValue","updateText","ev","target","prev_value","String"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,MAAT,OAA6C;AAAA,MAA7B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAA6B;;AAC1D,MAAIC,UAAU,GAAIC,EAAD,IAAQ;AACvB,QAAIH,KAAK,IAAI,CAAb,EAAgB;AACdC,MAAAA,QAAQ,CAAC,MAAME,EAAE,CAACC,MAAH,CAAUJ,KAAjB,CAAR;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,CAAEI,UAAD,IAAgBC,MAAM,CAACD,UAAD,CAAN,GAAqBF,EAAE,CAACC,MAAH,CAAUJ,KAAhD,CAAR;AACD;AACF,GAND;;AAOA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAED,MAFT;AAGE,MAAA,OAAO,EAAGI,EAAD,IAAQD,UAAU,CAACC,EAAD;AAH7B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;KAjBuBL,M","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Button({ number, value, setValue }) {\n  let updateText = (ev) => {\n    if (value == 0) {\n      setValue(() => ev.target.value);\n    } else {\n      setValue((prev_value) => String(prev_value) + ev.target.value);\n    }\n  };\n  return (\n    <>\n      <input\n        type=\"button\"\n        value={number}\n        onClick={(ev) => updateText(ev)}\n      ></input>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}